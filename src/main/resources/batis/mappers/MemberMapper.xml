<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace 값으로 현재 mapper 파일을 나타내는 ID 같은 고유값을 부여 보통 이 파일에 정의된 SQL문을 실행시킬 Dao인터페이스의 (패키지 포함한)전체이름으로 지정 -->

<mapper namespace="kr.ac.hit.myapp.member.MemberDao">

<!-- 어떤 결과와 어떤 변수를 매핑해야하는지 설정 -->
<!-- 자바 객체의 속성(변수명)과 데이터베이스 테이블의 컬럼명을 매치시키는 정보 프로퍼티가 자바 변수명 / 컬럼이 db컬럼명 -->
<!-- <resultMap type="kr.ac.hit.myapp.member.memberVo" id="memberMap"> 
mem_id 컬럼의 값을 MemberVo 객체의 memId 변수(속성)에 저장하라는 의미 PRIMARY KEY 는 result가 아니라 id 태그를 쓴다
 <id property="memId" column="mem_id" /> <result property="memPass" column="mem_pass" /> <result property="memName" column="mem_name" /> 
 <result property="memPoint" column="mem_point" /> </resultMap> -->
<!-- 실행할 SQL문의 종류와 일치하는 태그(엘리먼트)를 사용하여 SQL문을 등록 -->
<!-- id값으로 이 SQL문을 나타내는 고유한 값을 지정하는데 보통 이 SQL문을 실행할 Dao인터페이스의 메소드 이름과 동일하게 설정 -->
<!-- parameterType 값으로 SQL문을 실행하기 위해서 인자로 받아올 데이터의 타입을 지정 -->
<insert parameterType="memberVo" id="insert"> 
    INSERT INTO member ( mem_id, mem_pass, mem_name, mem_point, mem_img) 
    VALUES ( #{memId}, #{memPass}, #{memName}, #{memPoint} , #{memImg} ) 
    </insert>
<!-- #{xxx}로 파라미터로 받은 객체의 xxx 속성(변수)값을 SQL 내에서 사용 가능 -->
<!-- memberMap이라는 resultMap에 정의된 대로 컬럼값을 자바 객체의 변수(속성)에 담으란 의미 -->
<!-- <select id="selectList" resultMap="memberMap"> -->


<!-- 셀렉트는 값을 돌려주는게 있음, resultset을 for문을 돌리며 객체에 담아서 주는 걸 바티스가 해야함 -->
<!-- memberVo vo = new memberVo(); 이걸 바티스가 하고 vo.setMemId(rs.getString("mem_id")); 
이것도 바티스가 해야 하는데 둘이 같은 내용을 담는다는 걸 바티스는 몰라 vo.setMemPass(rs.getString("mem_id")); 
이렇게 하면 안된다는 것도 바티스는 몰라 그래서 resultMap이란 걸 만들었음. -->

<sql id="searchSql">
<trim prefixOverrides="AND|OR" prefix="WHERE">
<if test="searchType == 'title' or searchType=='total'"> mem_id like concat('%' ,#{searchWord}, '%') </if>
<if test="searchType == 'content' or searchType=='total' "> OR mem_name like concat('%', #{searchWord}, '%') </if>
</trim>
</sql>

<select parameterType="string" id="select" resultType="memberVo">
     SELECT mem_id , mem_name , mem_point , mem_img 
     FROM member 
     WHERE mem_id = #{memId} 
     </select>


<select id="selectList" resultType="memberVo">
SELECT mem_id , mem_name , mem_point, mem_img
FROM member 
<include refid="searchSql"/>
ORDER BY  mem_id DESC
LIMIT #{firstRecordIndex},#{size} 
</select>

<select id="selectCount" resultType="int">
SELECT COUNT(mem_id) FROM member 
<include refid="searchSql"/>

</select>

<update parameterType="memberVo" id="update">
UPDATE member SET mem_name = #{memName} , mem_point=#{memPoint} 
WHERE mem_id =#{memId} 
</update>
<delete parameterType="string" id="delete">
DELETE FROM member 
WHERE mem_id = #{memId} 
</delete>

<select parameterType="memberVo" id="selectLoginUser" resultType="memberVo"> 
    SELECT mem_id, mem_name, mem_point 
    FROM member 
    WHERE mem_id = #{memId} and mem_pass = #{memPass} 
    </select>

</mapper>